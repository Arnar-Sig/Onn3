(define (foldr f x u)
  (define (hjalp f x u)
    (if(null? x)
       u
       (hjalp f (cdr x) (f (Car x) u))
    )
  )
  (hjalp f (reverse x) u)
)

(define (powlist n)
  (define (hjalp i)
    (if(> i n)
       '(())
       (append (hjalp (+ i 1)) (map (lambda(z) (cons i z)) (hjalp (+ i 1))))
    )
  )
  (hjalp 1)
)